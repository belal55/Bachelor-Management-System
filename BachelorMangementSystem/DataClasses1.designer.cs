#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BachelorMangementSystem
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Database2")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertMeal(Meal instance);
    partial void UpdateMeal(Meal instance);
    partial void DeleteMeal(Meal instance);
    partial void InsertBalance(Balance instance);
    partial void UpdateBalance(Balance instance);
    partial void DeleteBalance(Balance instance);
    partial void InsertBazar(Bazar instance);
    partial void UpdateBazar(Bazar instance);
    partial void DeleteBazar(Bazar instance);
    partial void InsertMess(Mess instance);
    partial void UpdateMess(Mess instance);
    partial void DeleteMess(Mess instance);
    partial void InsertMember(Member instance);
    partial void UpdateMember(Member instance);
    partial void DeleteMember(Member instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::BachelorMangementSystem.Properties.Settings.Default.Database2ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Meal> Meals
		{
			get
			{
				return this.GetTable<Meal>();
			}
		}
		
		public System.Data.Linq.Table<Balance> Balances
		{
			get
			{
				return this.GetTable<Balance>();
			}
		}
		
		public System.Data.Linq.Table<Bazar> Bazars
		{
			get
			{
				return this.GetTable<Bazar>();
			}
		}
		
		public System.Data.Linq.Table<Mess> Messes
		{
			get
			{
				return this.GetTable<Mess>();
			}
		}
		
		public System.Data.Linq.Table<Member> Members
		{
			get
			{
				return this.GetTable<Member>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Meal")]
	public partial class Meal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _uid;
		
		private System.Nullable<int> _day;
		
		private System.Nullable<int> _night;
		
		private System.Nullable<System.DateTime> _date;
		
		private EntityRef<Member> _Member;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnuidChanging(System.Nullable<int> value);
    partial void OnuidChanged();
    partial void OndayChanging(System.Nullable<int> value);
    partial void OndayChanged();
    partial void OnnightChanging(System.Nullable<int> value);
    partial void OnnightChanged();
    partial void OndateChanging(System.Nullable<System.DateTime> value);
    partial void OndateChanged();
    #endregion
		
		public Meal()
		{
			this._Member = default(EntityRef<Member>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_uid", DbType="Int")]
		public System.Nullable<int> uid
		{
			get
			{
				return this._uid;
			}
			set
			{
				if ((this._uid != value))
				{
					if (this._Member.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuidChanging(value);
					this.SendPropertyChanging();
					this._uid = value;
					this.SendPropertyChanged("uid");
					this.OnuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_day", DbType="Int")]
		public System.Nullable<int> day
		{
			get
			{
				return this._day;
			}
			set
			{
				if ((this._day != value))
				{
					this.OndayChanging(value);
					this.SendPropertyChanging();
					this._day = value;
					this.SendPropertyChanged("day");
					this.OndayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_night", DbType="Int")]
		public System.Nullable<int> night
		{
			get
			{
				return this._night;
			}
			set
			{
				if ((this._night != value))
				{
					this.OnnightChanging(value);
					this.SendPropertyChanging();
					this._night = value;
					this.SendPropertyChanged("night");
					this.OnnightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_Meal", Storage="_Member", ThisKey="uid", OtherKey="Id", IsForeignKey=true)]
		public Member Member
		{
			get
			{
				return this._Member.Entity;
			}
			set
			{
				Member previousValue = this._Member.Entity;
				if (((previousValue != value) 
							|| (this._Member.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Member.Entity = null;
						previousValue.Meals.Remove(this);
					}
					this._Member.Entity = value;
					if ((value != null))
					{
						value.Meals.Add(this);
						this._uid = value.Id;
					}
					else
					{
						this._uid = default(Nullable<int>);
					}
					this.SendPropertyChanged("Member");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Balance")]
	public partial class Balance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _uid;
		
		private System.Nullable<double> _amount;
		
		private System.Nullable<System.DateTime> _date;
		
		private EntityRef<Member> _Member;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnuidChanging(System.Nullable<int> value);
    partial void OnuidChanged();
    partial void OnamountChanging(System.Nullable<double> value);
    partial void OnamountChanged();
    partial void OndateChanging(System.Nullable<System.DateTime> value);
    partial void OndateChanged();
    #endregion
		
		public Balance()
		{
			this._Member = default(EntityRef<Member>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_uid", DbType="Int")]
		public System.Nullable<int> uid
		{
			get
			{
				return this._uid;
			}
			set
			{
				if ((this._uid != value))
				{
					if (this._Member.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuidChanging(value);
					this.SendPropertyChanging();
					this._uid = value;
					this.SendPropertyChanged("uid");
					this.OnuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amount", DbType="Float")]
		public System.Nullable<double> amount
		{
			get
			{
				return this._amount;
			}
			set
			{
				if ((this._amount != value))
				{
					this.OnamountChanging(value);
					this.SendPropertyChanging();
					this._amount = value;
					this.SendPropertyChanged("amount");
					this.OnamountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_Balance", Storage="_Member", ThisKey="uid", OtherKey="Id", IsForeignKey=true)]
		public Member Member
		{
			get
			{
				return this._Member.Entity;
			}
			set
			{
				Member previousValue = this._Member.Entity;
				if (((previousValue != value) 
							|| (this._Member.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Member.Entity = null;
						previousValue.Balances.Remove(this);
					}
					this._Member.Entity = value;
					if ((value != null))
					{
						value.Balances.Add(this);
						this._uid = value.Id;
					}
					else
					{
						this._uid = default(Nullable<int>);
					}
					this.SendPropertyChanged("Member");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bazar")]
	public partial class Bazar : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _uid;
		
		private System.Nullable<double> _amount;
		
		private System.Nullable<System.DateTime> _date;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnuidChanging(System.Nullable<int> value);
    partial void OnuidChanged();
    partial void OnamountChanging(System.Nullable<double> value);
    partial void OnamountChanged();
    partial void OndateChanging(System.Nullable<System.DateTime> value);
    partial void OndateChanged();
    #endregion
		
		public Bazar()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_uid", DbType="Int")]
		public System.Nullable<int> uid
		{
			get
			{
				return this._uid;
			}
			set
			{
				if ((this._uid != value))
				{
					this.OnuidChanging(value);
					this.SendPropertyChanging();
					this._uid = value;
					this.SendPropertyChanged("uid");
					this.OnuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amount", DbType="Float")]
		public System.Nullable<double> amount
		{
			get
			{
				return this._amount;
			}
			set
			{
				if ((this._amount != value))
				{
					this.OnamountChanging(value);
					this.SendPropertyChanging();
					this._amount = value;
					this.SendPropertyChanged("amount");
					this.OnamountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Mess")]
	public partial class Mess : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<double> _TotalBalance;
		
		private System.Nullable<int> _TotalMeal;
		
		private System.Nullable<double> _MealRate;
		
		private System.Nullable<int> _TotalMember;
		
		private System.Nullable<double> _TotalBazar;
		
		private System.Nullable<int> _TodaysMeal;
		
		private System.Nullable<double> _TodaysShopping;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTotalBalanceChanging(System.Nullable<double> value);
    partial void OnTotalBalanceChanged();
    partial void OnTotalMealChanging(System.Nullable<int> value);
    partial void OnTotalMealChanged();
    partial void OnMealRateChanging(System.Nullable<double> value);
    partial void OnMealRateChanged();
    partial void OnTotalMemberChanging(System.Nullable<int> value);
    partial void OnTotalMemberChanged();
    partial void OnTotalBazarChanging(System.Nullable<double> value);
    partial void OnTotalBazarChanged();
    partial void OnTodaysMealChanging(System.Nullable<int> value);
    partial void OnTodaysMealChanged();
    partial void OnTodaysShoppingChanging(System.Nullable<double> value);
    partial void OnTodaysShoppingChanged();
    #endregion
		
		public Mess()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalBalance", DbType="Float")]
		public System.Nullable<double> TotalBalance
		{
			get
			{
				return this._TotalBalance;
			}
			set
			{
				if ((this._TotalBalance != value))
				{
					this.OnTotalBalanceChanging(value);
					this.SendPropertyChanging();
					this._TotalBalance = value;
					this.SendPropertyChanged("TotalBalance");
					this.OnTotalBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalMeal", DbType="Int")]
		public System.Nullable<int> TotalMeal
		{
			get
			{
				return this._TotalMeal;
			}
			set
			{
				if ((this._TotalMeal != value))
				{
					this.OnTotalMealChanging(value);
					this.SendPropertyChanging();
					this._TotalMeal = value;
					this.SendPropertyChanged("TotalMeal");
					this.OnTotalMealChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MealRate", DbType="Float")]
		public System.Nullable<double> MealRate
		{
			get
			{
				return this._MealRate;
			}
			set
			{
				if ((this._MealRate != value))
				{
					this.OnMealRateChanging(value);
					this.SendPropertyChanging();
					this._MealRate = value;
					this.SendPropertyChanged("MealRate");
					this.OnMealRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalMember", DbType="Int")]
		public System.Nullable<int> TotalMember
		{
			get
			{
				return this._TotalMember;
			}
			set
			{
				if ((this._TotalMember != value))
				{
					this.OnTotalMemberChanging(value);
					this.SendPropertyChanging();
					this._TotalMember = value;
					this.SendPropertyChanged("TotalMember");
					this.OnTotalMemberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalBazar", DbType="Float")]
		public System.Nullable<double> TotalBazar
		{
			get
			{
				return this._TotalBazar;
			}
			set
			{
				if ((this._TotalBazar != value))
				{
					this.OnTotalBazarChanging(value);
					this.SendPropertyChanging();
					this._TotalBazar = value;
					this.SendPropertyChanged("TotalBazar");
					this.OnTotalBazarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TodaysMeal", DbType="Int")]
		public System.Nullable<int> TodaysMeal
		{
			get
			{
				return this._TodaysMeal;
			}
			set
			{
				if ((this._TodaysMeal != value))
				{
					this.OnTodaysMealChanging(value);
					this.SendPropertyChanging();
					this._TodaysMeal = value;
					this.SendPropertyChanged("TodaysMeal");
					this.OnTodaysMealChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TodaysShopping", DbType="Float")]
		public System.Nullable<double> TodaysShopping
		{
			get
			{
				return this._TodaysShopping;
			}
			set
			{
				if ((this._TodaysShopping != value))
				{
					this.OnTodaysShoppingChanging(value);
					this.SendPropertyChanging();
					this._TodaysShopping = value;
					this.SendPropertyChanged("TodaysShopping");
					this.OnTodaysShoppingChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Member")]
	public partial class Member : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _name;
		
		private System.Nullable<double> _balance;
		
		private System.Nullable<int> _totalmeals;
		
		private System.Nullable<double> _bills;
		
		private System.Nullable<double> _due;
		
		private EntitySet<Meal> _Meals;
		
		private EntitySet<Balance> _Balances;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnbalanceChanging(System.Nullable<double> value);
    partial void OnbalanceChanged();
    partial void OntotalmealsChanging(System.Nullable<int> value);
    partial void OntotalmealsChanged();
    partial void OnbillsChanging(System.Nullable<double> value);
    partial void OnbillsChanged();
    partial void OndueChanging(System.Nullable<double> value);
    partial void OndueChanged();
    #endregion
		
		public Member()
		{
			this._Meals = new EntitySet<Meal>(new Action<Meal>(this.attach_Meals), new Action<Meal>(this.detach_Meals));
			this._Balances = new EntitySet<Balance>(new Action<Balance>(this.attach_Balances), new Action<Balance>(this.detach_Balances));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_balance", DbType="Float")]
		public System.Nullable<double> balance
		{
			get
			{
				return this._balance;
			}
			set
			{
				if ((this._balance != value))
				{
					this.OnbalanceChanging(value);
					this.SendPropertyChanging();
					this._balance = value;
					this.SendPropertyChanged("balance");
					this.OnbalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totalmeals", DbType="Int")]
		public System.Nullable<int> totalmeals
		{
			get
			{
				return this._totalmeals;
			}
			set
			{
				if ((this._totalmeals != value))
				{
					this.OntotalmealsChanging(value);
					this.SendPropertyChanging();
					this._totalmeals = value;
					this.SendPropertyChanged("totalmeals");
					this.OntotalmealsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bills", DbType="Float")]
		public System.Nullable<double> bills
		{
			get
			{
				return this._bills;
			}
			set
			{
				if ((this._bills != value))
				{
					this.OnbillsChanging(value);
					this.SendPropertyChanging();
					this._bills = value;
					this.SendPropertyChanged("bills");
					this.OnbillsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_due", DbType="Float")]
		public System.Nullable<double> due
		{
			get
			{
				return this._due;
			}
			set
			{
				if ((this._due != value))
				{
					this.OndueChanging(value);
					this.SendPropertyChanging();
					this._due = value;
					this.SendPropertyChanged("due");
					this.OndueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_Meal", Storage="_Meals", ThisKey="Id", OtherKey="uid")]
		public EntitySet<Meal> Meals
		{
			get
			{
				return this._Meals;
			}
			set
			{
				this._Meals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_Balance", Storage="_Balances", ThisKey="Id", OtherKey="uid")]
		public EntitySet<Balance> Balances
		{
			get
			{
				return this._Balances;
			}
			set
			{
				this._Balances.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Meals(Meal entity)
		{
			this.SendPropertyChanging();
			entity.Member = this;
		}
		
		private void detach_Meals(Meal entity)
		{
			this.SendPropertyChanging();
			entity.Member = null;
		}
		
		private void attach_Balances(Balance entity)
		{
			this.SendPropertyChanging();
			entity.Member = this;
		}
		
		private void detach_Balances(Balance entity)
		{
			this.SendPropertyChanging();
			entity.Member = null;
		}
	}
}
#pragma warning restore 1591
